
FUNCTION_BLOCK truckDriver

VAR_INPUT
    x : REAL;
    y : REAL;
    angle : REAL;
END_VAR

VAR_OUTPUT
    angleOutput : REAL;
END_VAR

FUZZIFY x
    TERM left := (0, 1) (0.5, 0);
    TERM center := (0, 0) (0.5, 1) (1, 0);
    TERM right := (0.5, 0) (1, 1);
END_FUZZIFY

FUZZIFY y
    TERM close := (0.5, 0) (1, 1);
END_FUZZIFY

FUZZIFY angle
    TERM up := (180, 0) (270, 1) (360, 0);
    TERM down := (0, 0) (90, 1) ( 180, 0);
    TERM left := (0, 1) (90, 0) (270, 0) (360, 1);
    TERM right := (90, 0) (180, 1) (270, 0);
END_FUZZIFY

DEFUZZIFY angleOutput
    TERM turnRight := (-1, 1) (0, 0);
    TERM turnLeft := (0, 0) (1, 1);
    METHOD : COA;       // Use 'Center Of Area' defuzzification method
    DEFAULT := 0;       // Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

RULEBLOCK No1
    AND : MIN;          // Use 'min' for 'and' (also implicit use 'max' for 'or' to fulfill DeMorgan's Law)
    ACT : MIN;          // Use 'min' activation method
    ACCU : MAX;         // Use 'max' accumulation method

    RULE 1 : if x is center and angle is up then angleOutput is turnLeft;

    RULE 2 : if x is center and angle is right then angleOutput is turnRight;

    RULE 3 : if x is center and angle is left then angleOutput is turnLeft;

    RULE 4 : if x is left and angle is up then angleOutput is turnRight;

    RULE 5 : if x is right and angle is up then angleOutput is turnLeft;

    RULE 6 : if x is left and angle is right then angleOutput is turnRight;

    RULE 7 : if x is right and angle is left then angleOutput is turnLeft;

    RULE 8 : if x is left and angle is down and y is not close
             then angleOutput is turnLeft;

    RULE 9 : if x is left and angle is left and y is close
             then angleOutput is turnRight;

    RULE 10 : if x is right and angle is down and y is not close
              then angleOutput is turnRight;

    RULE 11 : if x is right and angle is right and y is close
              then angleOutput is turnLeft;

END_RULEBLOCK

END_FUNCTION_BLOCK
